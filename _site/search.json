[
  {
    "objectID": "CV.html",
    "href": "CV.html",
    "title": "htoisanroi.github.io",
    "section": "",
    "text": "title: “Curriculum Vitae”\nformat: html"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "htoisanroi.github.io",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "epps6302assignment2.html",
    "href": "epps6302assignment2.html",
    "title": "Assignment 2",
    "section": "",
    "text": "gtrendR\n\nlibrary(gtrendsR)\nTrumpHarrisElection = gtrends(c(\"Donald Trump\",\"Kamala Harris\",\"election\"), onlyInterest = TRUE, geo = \"US\", gprop = \"web\", time = \"today+5-y\", category = 0, ) # last five years\nthe_df=TrumpHarrisElection$interest_over_time\nplot(TrumpHarrisElection)\n\n\n\n\n\n\n\n\n\n\nCSV\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ndf &lt;- read_csv(\"Assignment 2.csv\", skip = 1)\n\nRows: 262 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): Donald Trump: (United States), Kamala Harris: (United States), ele...\ndate (1): Week\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nnames(df)[1] &lt;- \"week\"\ndf &lt;- df %&gt;% mutate(across(-week, ~ as.numeric(str_replace(.x, \"&lt;1\", \"0\"))))\ndf &lt;- df %&gt;% mutate(week = as.Date(week))\ndf_long &lt;- df %&gt;% pivot_longer(-week, names_to = \"search_term\", values_to = \"interest\")\n\nggplot(df_long, aes(x = week, y = interest, color = search_term)) +\n  geom_line() +\n  labs(title = \"Interest over time\", x = \"Date\", y = \"Search hits\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nAnalysis and comparison between the two methods\nAs GtrendR connects directly to the Google Trends API, it can catch up the most current data, with tidy and it’s so easy to plot. This one makes us so flexible for getting updated data. For CSV method, it only reflects the time when we downloaded it and requires more manual cleaning to analyze it. To conclude, GtrendsR is better for reproducibility and fresh results, while CSV is better for consistency and sharing."
  },
  {
    "objectID": "epps6302assignment1.html",
    "href": "epps6302assignment1.html",
    "title": "Assignment 2",
    "section": "",
    "text": "In Teaching to See, Andrei Severny and Edward Tufte, building on the insights of Inge Druckrey, emphasize the art of truly learning how to observe visual form. One of the first lessons from Druckrey is the distinction between thin and thick, as well as curve and linearity. These contrasts are more than stylistic choices; they establish rhythm, balance, and structure in design. A thin line may suggest delicacy or subtlety, while a thick stroke conveys weight and emphasis. Similarly, curved forms add movement, grace, and fluidity, while linear elements ground a composition with stability and direction. Training the eye to perceive these subtle relationships develops sensitivity that is essential for effective visual communication.\nHolmes extended this idea by reflecting on the relationship between the eye and the hand in writing. He described the eye as the organ of selection and judgment, the part that perceives form, proportion, and harmony. The hand, in contrast, serves as the instrument of execution, translating visual thought into physical marks. Writing and drawing, therefore, require an intimate collaboration: the eye directs and evaluates, while the hand follows and shapes. This duality highlights that skill in design is not just manual dexterity, but also cultivated vision.\nThe influence of such training can be seen in modern technology. Steve Jobs often credited a college calligraphy course for shaping his design sensibility and inspiring the Macintosh computer’s typographic elegance. Calligraphy taught him the beauty of proportion, spacing, and detail, which later translated into Apple’s groundbreaking use of digital fonts and aesthetically refined interfaces. For Jobs, calligraphy represented the fusion of art and technology—a philosophy that made Apple products not only functional but also visually compelling and deeply human-centered.\nA final lesson from Druckrey and Tufte concerns the difference between geometric accuracy and optical accuracy. Geometric accuracy refers to strict mathematical precision—perfect circles, exact squares, or measurable alignments. Yet, design that is only geometrically correct can often feel awkward to the human eye. Optical accuracy, by contrast, adapts form to perception. In typography, for example, curved letters like “O” often extend slightly beyond a baseline so that they appear equal in size to straight letters, even though they are not geometrically identical. This principle reflects a core truth: design is judged not by mathematical rules alone but by how forms are perceived in real experience.\nIn sum, Teaching to See underscores that design begins with perception, sharpened through attention to contrast, balance, and the collaboration of eye and hand. From Druckrey’s lessons on thin and thick to Jobs’ appreciation for calligraphy, the text reminds us that clarity, elegance, and human perception matter more than mechanical precision. Seeing, in this sense, is not a passive act but an active discipline that shapes the way we create and communicate in the visual world."
  },
  {
    "objectID": "epps6302assignment1.html#assignment-1",
    "href": "epps6302assignment1.html#assignment-1",
    "title": "Assignment 2",
    "section": "",
    "text": "In Teaching to See, Andrei Severny and Edward Tufte, building on the insights of Inge Druckrey, emphasize the art of truly learning how to observe visual form. One of the first lessons from Druckrey is the distinction between thin and thick, as well as curve and linearity. These contrasts are more than stylistic choices; they establish rhythm, balance, and structure in design. A thin line may suggest delicacy or subtlety, while a thick stroke conveys weight and emphasis. Similarly, curved forms add movement, grace, and fluidity, while linear elements ground a composition with stability and direction. Training the eye to perceive these subtle relationships develops sensitivity that is essential for effective visual communication.\nHolmes extended this idea by reflecting on the relationship between the eye and the hand in writing. He described the eye as the organ of selection and judgment, the part that perceives form, proportion, and harmony. The hand, in contrast, serves as the instrument of execution, translating visual thought into physical marks. Writing and drawing, therefore, require an intimate collaboration: the eye directs and evaluates, while the hand follows and shapes. This duality highlights that skill in design is not just manual dexterity, but also cultivated vision.\nThe influence of such training can be seen in modern technology. Steve Jobs often credited a college calligraphy course for shaping his design sensibility and inspiring the Macintosh computer’s typographic elegance. Calligraphy taught him the beauty of proportion, spacing, and detail, which later translated into Apple’s groundbreaking use of digital fonts and aesthetically refined interfaces. For Jobs, calligraphy represented the fusion of art and technology—a philosophy that made Apple products not only functional but also visually compelling and deeply human-centered.\nA final lesson from Druckrey and Tufte concerns the difference between geometric accuracy and optical accuracy. Geometric accuracy refers to strict mathematical precision—perfect circles, exact squares, or measurable alignments. Yet, design that is only geometrically correct can often feel awkward to the human eye. Optical accuracy, by contrast, adapts form to perception. In typography, for example, curved letters like “O” often extend slightly beyond a baseline so that they appear equal in size to straight letters, even though they are not geometrically identical. This principle reflects a core truth: design is judged not by mathematical rules alone but by how forms are perceived in real experience.\nIn sum, Teaching to See underscores that design begins with perception, sharpened through attention to contrast, balance, and the collaboration of eye and hand. From Druckrey’s lessons on thin and thick to Jobs’ appreciation for calligraphy, the text reminds us that clarity, elegance, and human perception matter more than mechanical precision. Seeing, in this sense, is not a passive act but an active discipline that shapes the way we create and communicate in the visual world."
  },
  {
    "objectID": "epps6302assignment3.html",
    "href": "epps6302assignment3.html",
    "title": "Assignment 3",
    "section": "",
    "text": "Mapping Census Data\n\nlibrary(tidycensus)\nlibrary(tigris)\n\nTo enable caching of data, set `options(tigris_use_cache = TRUE)`\nin your R script or .Rprofile.\n\nlibrary(sf)\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(ggplot2)\nlibrary(readr)\n\noptions(tigris_use_cache = TRUE)\n\n# 1) API key (uncomment and paste your key)\ncensus_api_key(\"01924c92db2fdfcac8663b0e459d68c1552447c5\", install = FALSE)\n\nTo install your API key for use in future sessions, run this function with `install = TRUE`.\n\n# 2) Explore variables\nvars &lt;- load_variables(2023, \"acs5\", cache = TRUE)\n# View a few example codes\nvars |&gt; dplyr::filter(grepl(\"^B19\", name)) |&gt; dplyr::slice_head(n = 10)\n\n# A tibble: 10 × 4\n   name        label                                concept            geography\n   &lt;chr&gt;       &lt;chr&gt;                                &lt;chr&gt;              &lt;chr&gt;    \n 1 B19001A_001 Estimate!!Total:                     Household Income … tract    \n 2 B19001A_002 Estimate!!Total:!!Less than $10,000  Household Income … tract    \n 3 B19001A_003 Estimate!!Total:!!$10,000 to $14,999 Household Income … tract    \n 4 B19001A_004 Estimate!!Total:!!$15,000 to $19,999 Household Income … tract    \n 5 B19001A_005 Estimate!!Total:!!$20,000 to $24,999 Household Income … tract    \n 6 B19001A_006 Estimate!!Total:!!$25,000 to $29,999 Household Income … tract    \n 7 B19001A_007 Estimate!!Total:!!$30,000 to $34,999 Household Income … tract    \n 8 B19001A_008 Estimate!!Total:!!$35,000 to $39,999 Household Income … tract    \n 9 B19001A_009 Estimate!!Total:!!$40,000 to $44,999 Household Income … tract    \n10 B19001A_010 Estimate!!Total:!!$45,000 to $49,999 Household Income … tract    \n\n# 3) Parameters (EDIT ME)\nstate_abbr &lt;- \"CA\"\ngeo_level  &lt;- \"county\"   # options: state, county, tract, block group\nmy_vars    &lt;- c(income = \"B19013_001\", poverty = \"B17001_002\")\nyear_acs   &lt;- 2023\nsurvey     &lt;- \"acs5\"\n\n# 4) Download\nacs &lt;- get_acs(\n  geography = geo_level,\n  variables = my_vars,\n  state = state_abbr,\n  year = year_acs,\n  survey = survey,\n  geometry = TRUE\n)\n\nGetting data from the 2019-2023 5-year ACS\n\n# 5) Wide format for convenience\nacs_wide &lt;- acs |&gt;\n  tidyr::pivot_wider(\n    id_cols = c(GEOID, NAME, geometry),\n    names_from = variable,\n    values_from = c(estimate, moe)\n  )\n\n# 6) Map (edit titles/theme)\nggplot(acs_wide) +\n  geom_sf(aes(fill = estimate_income), color = NA) +\n  scale_fill_viridis_c(name = \"Median HH Income\") +\n  labs(title = paste0(\"ACS \", year_acs, \" 5-year: Median Income — \", state_abbr, \" (\", geo_level, \")\"),\n       caption = \"Source: U.S. Census Bureau via tidycensus\") +\n  theme_minimal()\n\n\n\n\n\n\n\n# 7) Table (top/bottom by poverty count)\ntop10 &lt;- acs_wide |&gt;\n  arrange(desc(estimate_poverty)) |&gt;\n  select(NAME, estimate_poverty, moe_poverty) |&gt;\n  slice_head(n = 10)\n\nbottom10 &lt;- acs_wide |&gt;\n  arrange(estimate_poverty) |&gt;\n  select(NAME, estimate_poverty, moe_poverty) |&gt;\n  slice_head(n = 10)\n\ntop10\n\nSimple feature collection with 10 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -122.3423 ymin: 32.53444 xmax: -114.1312 ymax: 38.7364\nGeodetic CRS:  NAD83\n# A tibble: 10 × 4\n   NAME                   estimate_poverty moe_poverty                  geometry\n   &lt;chr&gt;                             &lt;dbl&gt;       &lt;dbl&gt;        &lt;MULTIPOLYGON [°]&gt;\n 1 Los Angeles County, C…          1322476       15552 (((-118.6044 33.47855, -…\n 2 San Diego County, Cal…           330602        7963 (((-117.596 33.38779, -1…\n 3 Orange County, Califo…           296493        8509 (((-118.1146 33.74461, -…\n 4 San Bernardino County…           291226        9076 (((-117.8025 33.97555, -…\n 5 Riverside County, Cal…           266955        8729 (((-117.6763 33.88882, -…\n 6 Sacramento County, Ca…           197472        6775 (((-121.8625 38.06795, -…\n 7 Fresno County, Califo…           185717        5965 (((-120.9094 36.7477, -1…\n 8 Kern County, Californ…           168825        6993 (((-120.1944 35.78936, -…\n 9 Alameda County, Calif…           149752        4801 (((-122.3423 37.80556, -…\n10 Santa Clara County, C…           128470        5622 (((-122.2027 37.36305, -…\n\nbottom10\n\nSimple feature collection with 10 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -124.256 ymin: 35.78669 xmax: -115.648 ymax: 42.00076\nGeodetic CRS:  NAD83\n# A tibble: 10 × 4\n   NAME                   estimate_poverty moe_poverty                  geometry\n   &lt;chr&gt;                             &lt;dbl&gt;       &lt;dbl&gt;        &lt;MULTIPOLYGON [°]&gt;\n 1 Alpine County, Califo…              209          98 (((-120.0724 38.70277, -…\n 2 Sierra County, Califo…              325         202 (((-121.0575 39.53999, -…\n 3 Mono County, Californ…             1441         480 (((-119.6489 38.28912, -…\n 4 Modoc County, Califor…             1717         357 (((-121.4572 41.94994, -…\n 5 Inyo County, Californ…             1928         439 (((-118.79 37.39403, -11…\n 6 Plumas County, Califo…             2075         538 (((-121.497 40.43702, -1…\n 7 Colusa County, Califo…             2332         598 (((-122.7851 39.38298, -…\n 8 Mariposa County, Cali…             2347         449 (((-120.3944 37.67504, -…\n 9 Trinity County, Calif…             2830         755 (((-123.6224 40.9317, -1…\n10 Del Norte County, Cal…             2900         589 (((-124.2175 41.95081, -…\n\n# 8) Save outputs (optional)\nreadr::write_csv(st_drop_geometry(acs_wide), \"acs_data.csv\")\n\nDownload file\n\n\nInterpretation of Data\nThe map highlights economic inequality across California. Wealth is concentrated in urban, coastal, and tech-driven regions, while rural and agricultural counties remain at the lower end. It also reflects structural factors: 1)Cost of living and housing markets (higher incomes in expensive regions). 2)Industry base (tech/finance vs. agriculture/forestry). 3)Population density and economic opportunities."
  },
  {
    "objectID": "epps6356assignment1.html",
    "href": "epps6356assignment1.html",
    "title": "EPPS6356 — Assignment 1 (Data Visualization)",
    "section": "",
    "text": "#Reading Assignment- Francis J. Anscombe (1973). Graphs in Statistical Analysis. The American Statistician, 27(1), 17–21.\nAnscombe (1973) showed that four extremely different datasets can share nearly identical summary statistics (means, variances, correlation, and the same least‑squares regression line). However, when we graph, the results are totally different.From this, the most important point is that we should never rely on numbers alone: we must always visualize. Practical solutions include (i) always starting with basic exploratory plots (scatterplots, residuals, boxplots), (ii) checking model assumptions with diagnostics, (iii) considering robust methods or transformations to address outliers and nonlinearity, and (iv) documenting how visual findings inform model choice and interpretation. To conclude, visualization is not optional—it is essential to statistical thinking.\n#Illustration; The chunk below recreates the quartet and shows the same regression line over four extremely different patterns.\n\n\nCode\n# Base R ships with 'anscombe'\ndf_list &lt;- lapply(1:4, function(i) {\n  data.frame(\n    x = anscombe[[paste0(\"x\", i)]],\n    y = anscombe[[paste0(\"y\", i)]],\n    set = paste(\"Set\", i)\n  )\n})\nans_df &lt;- do.call(rbind, df_list)\n\n# Fit a single (illustrative) regression per set\ncoefs &lt;- by(ans_df, ans_df$set, function(d) coef(lm(y ~ x, data = d)))\ncoefs &lt;- do.call(rbind, coefs)\ncoefs\n\n\n      (Intercept)         x\nSet 1    3.000091 0.5000909\nSet 2    3.000909 0.5000000\nSet 3    3.002455 0.4997273\nSet 4    3.001727 0.4999091\n\n\nCode\n# Plot with ggplot2\nlibrary(ggplot2)\nlibrary(dplyr)\n\nggplot(ans_df, aes(x, y)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  facet_wrap(~ set, scales = \"free\") +\n  theme_minimal(base_size = 12)\n\n\n\n\n\nAnscombe’s quartet: identical stats, different stories."
  },
  {
    "objectID": "epps6356assignment1.html#references",
    "href": "epps6356assignment1.html#references",
    "title": "EPPS6356 — Assignment 1 (Data Visualization)",
    "section": "3.1 References",
    "text": "3.1 References\n\nAnscombe, F. J. (1973). Graphs in statistical analysis. The American Statistician, 27(1), 17–21.\nYau, N. (various). FlowingData examples and chart critiques. https://flowingdata.com/"
  }
]